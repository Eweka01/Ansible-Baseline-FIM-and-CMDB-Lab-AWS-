---
- name: Install Node Exporter on AWS Instances
  hosts: aws_instances
  become: yes
  vars:
    node_exporter_version: "1.7.0"
    node_exporter_user: "node_exporter"
    node_exporter_group: "node_exporter"
    node_exporter_binary: "/usr/local/bin/node_exporter"
    node_exporter_port: "9100"

  tasks:
    - name: Create node_exporter user
      user:
        name: "{{ node_exporter_user }}"
        system: yes
        shell: /usr/sbin/nologin
        home: /var/lib/node_exporter
        create_home: no
        state: present

    - name: Create node_exporter group
      group:
        name: "{{ node_exporter_group }}"
        state: present

    - name: Download Node Exporter (Amazon Linux)
      get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        dest: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        mode: '0644'
      when: ansible_distribution == "Amazon"

    - name: Download Node Exporter (Ubuntu)
      get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        dest: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        mode: '0644'
      when: ansible_distribution == "Ubuntu"

    - name: Extract Node Exporter
      unarchive:
        src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        dest: "/tmp/"
        remote_src: yes

    - name: Copy Node Exporter binary
      copy:
        src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
        dest: "{{ node_exporter_binary }}"
        owner: "{{ node_exporter_user }}"
        group: "{{ node_exporter_group }}"
        mode: '0755'
        remote_src: yes

    - name: Create systemd service file
      copy:
        content: |
          [Unit]
          Description=Prometheus Node Exporter
          Wants=network-online.target
          After=network-online.target

          [Service]
          User={{ node_exporter_user }}
          Group={{ node_exporter_group }}
          Type=simple
          ExecStart={{ node_exporter_binary }} --web.listen-address=:{{ node_exporter_port }}
          Restart=always
          RestartSec=3

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/node_exporter.service
        mode: '0644'

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Enable Node Exporter service
      systemd:
        name: node_exporter
        enabled: yes
        state: started

    - name: Wait for Node Exporter to start
      wait_for:
        port: "{{ node_exporter_port }}"
        host: "{{ ansible_host }}"
        timeout: 30

    - name: Verify Node Exporter is running
      uri:
        url: "http://{{ ansible_host }}:{{ node_exporter_port }}/metrics"
        method: GET
        status_code: 200
      register: node_exporter_check

    - name: Display Node Exporter status
      debug:
        msg: "Node Exporter is running on {{ ansible_host }}:{{ node_exporter_port }}"

    - name: Clean up temporary files
      file:
        path: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        state: absent

    - name: Clean up extracted directory
      file:
        path: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64"
        state: absent
